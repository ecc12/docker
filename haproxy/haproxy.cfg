global
    log stdout    local0
    log stdout    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy-admin.sock mode 660 level admin
    stats timeout 30s
    user nonroot
    group nonroot
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

listen stats # Define a listen section called "stats"
  bind 0.0.0.0:9000 # Listen on localhost:9000
  mode http
  stats enable  # Enable stats page
  stats uri /haproxy_stats  # Stats URI
    
frontend web_front
    bind 0.0.0.0:80
    mode http

    acl host_status hdr_beg(host) status
    use_backend web_status if host_status
    
    acl host_example hdr_beg(host) app
    use_backend web_example if host_example

    default_backend web_hello

backend web_status
    mode http
    http-request set-header Host httpstat.us
    server server_status_1 httpstat.us:80 check
    
backend web_example
    mode http
    option httpchk  GET / "HTTP/1.1\r\nHost: www.example.com"
    http-request set-header Host www.example.com
    server server_app_1 www.example.com:80 check
    server server_app_2 example.com:80 check
    server server_app_3 example.com:81 check
    
backend web_hello
    mode http
    errorfile 503 /default.http

